{"version":3,"sources":["components/Navbar/index.js","components/Row/index.js","components/SortBtn/index.js","components/Table/index.js","App.js","index.js"],"names":["Navbar","props","type","name","value","filter","placeholder","size","onChange","searchEmployees","Row","columns","map","columnName","key","data","src","process","alt","SortBtn","sortEmployees","descending","state","className","sortedBy","onClick","Table","style","width","columnWidths","employees","employee","display","require","filterBy","App","useReducer","action","trim","toLowerCase","isMatched","includes","sortBy","sort","a","b","a_val","b_val","dispatch","useEffect","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5080ed46.chunk.js","sourcesContent":["import React, {} from 'react';\nimport \"./style.css\";\n\nfunction Navbar(props) {\n\n  return (\n    <header>\n      <h1>Employee Directory</h1>\n      <input type=\"text\" name=\"filter\" value={props.filter} placeholder=\"Search\" size=\"30\" onChange={props.searchEmployees}/>\n    </header>\n  );\n}\n\nexport default Navbar;\n","import React, {} from 'react';\nimport \"./style.css\";\n\nfunction Row(props) {\n\n  return (\n    <tr>\n      {props.columns.map(columnName => {\n        return <td key={columnName}>{columnName !== \"Image\" ? props.data[columnName] : <img src={`${process.env.PUBLIC_URL}/img/${props.data[columnName]}`} alt={props.data.name}/>}</td>\n      })}\n    </tr>\n  );\n}\n\nexport default Row;\n","import React, {} from 'react';\nimport \"./style.css\";\n\nfunction SortBtn(props) {\n\n  const { sortEmployees, columnName, descending, state } = props;\n\n  let className = \"sort-btn-selected\";\n  // if this button isn't selected (as indicated by state), apply styling class\n  if ((state.sortedBy !== columnName) || (state.descending !== descending)) {\n    className = \"sort-btn\";\n  } \n\n  return (\n    <span className={className} onClick={() => sortEmployees(columnName, descending)}>\n      {descending ? \"⋁\" : \"⋀\"}\n    </span>\n  );\n}\n\nexport default SortBtn;\n","import React, {} from 'react';\nimport Row from '../Row';\nimport SortBtn from '../SortBtn';\nimport \"./style.css\";\n\nfunction Table(props) {\n\n  return (\n    <div className=\"table-container\">\n      <table>\n        <thead>\n          <tr>\n            {props.columns.map(columnName => {\n              return (\n                <th key={columnName} style={{width: props.columnWidths[columnName]}}>\n                  { columnName === \"Image\" ? columnName : (\n                    // Render sort buttons except after \"Image\"\n                    <span>\n                      {columnName + \" \"} \n                      <SortBtn descending={false} columnName={columnName} state={props.state} sortEmployees={props.sortEmployees} /> \n                      <SortBtn descending={true} columnName={columnName} state={props.state} sortEmployees={props.sortEmployees} /> \n                    </span>\n                  )}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {props.state.employees.filter(employee => employee.display).map(employee => {\n            return <Row data={employee} columns={props.columns} key={employee.name}/>;\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useReducer, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Table from './components/Table';\nimport './style.css';\n\nconst employees = require(\"./db/employee.json\");\nconst columns = [\"Image\", \"First Name\", \"Last Name\", \"Phone\", \"Email\", \"DOB\"]; // columns to display\nconst filterBy = [\"name\", \"Phone\", \"Email\", \"DOB\"]; // columns to search for search term\nconst columnWidths = {\n  \"Image\": 56,\n  \"First Name\": 100,\n  \"Last Name\": 100,\n  \"Phone\": 100,\n  \"Email\": 250,\n  \"DOB\": 85,\n};\n\nfunction App() {\n\n  // set up state to keep track of display\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"search\":\n        const filter = action.filter.trim().toLowerCase();\n        return {...state, filter: action.filter, employees: state.employees.map(employee => {\n          let isMatched = false;\n          for (const columnName of filterBy) {\n            if (employee[columnName].toLowerCase().includes(filter)) {\n              isMatched = true;\n              break;\n            }\n          }\n          return {...employee, display: isMatched};\n        })};\n\n      case \"sort\":\n        return {\n          ...state, sortedBy: action.sortBy, descending: action.descending, employees: state.employees.sort((a, b) => {\n            // use column specified by sortBy, and ignore capitalization\n            const a_val = a[action.sortBy].toLowerCase();\n            const b_val = b[action.sortBy].toLowerCase();\n\n            if ((a_val > b_val) !== action.descending) { // order is inverted if action.descending\n              return 1;\n            } else if ((a_val < b_val) !== action.descending) {\n              return -1;\n            } else {\n              return 0;\n            }\n          })\n        }\n\n      default:\n        return state;\n    }\n  }, {\n    employees: employees.map(employee => ({...employee, name: employee[\"First Name\"] + \" \" +  employee[\"Last Name\"], display: true})), // employee list, initialized with all displayed\n    filter: \"\", // string typed in search bar\n    sortedBy: \"None\", // used to determine which arrow to highlight\n    descending: false, // also used to determine which arrow to highlight\n  });\n\n  const searchEmployees = event => {\n    const { value } = event.target;\n    dispatch({type: \"search\", filter: value});\n  }\n\n  const sortEmployees = (sortBy, descending=false) => {\n    dispatch({type: \"sort\", sortBy, descending});\n  }\n\n  useEffect(() => {\n    // have employees start out sorted by last name\n    sortEmployees(\"Last Name\");\n  }, []);\n\n  return (\n    <main>\n      <Navbar filter={state.filter} searchEmployees={searchEmployees}/>\n      <Table state={state} columns={columns} sortEmployees={sortEmployees} columnWidths={columnWidths}/>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}